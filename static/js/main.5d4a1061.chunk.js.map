{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","name","email","body","className","href","CommentList","comments","map","comment","id","UserInfo","user","PostInfo","title","length","PostList","posts","post","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"018IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,KAAhB,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGH,IAGF,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCfMG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAC,GAAO,OACnB,cAAC,EAAD,CACER,KAAMQ,EAAQR,KACdC,MAAOO,EAAQP,MACfC,KAAMM,EAAQN,MACTM,EAAQC,UCRRC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGR,UAAU,WAAWC,KAAI,iBAAYO,EAAKV,OAA7C,SACGU,EAAKX,SCAGY,EAAW,SAAC,GAAD,IACtBC,EADsB,EACtBA,MACAX,EAFsB,EAEtBA,KACAS,EAHsB,EAGtBA,KACAL,EAJsB,EAItBA,SAJsB,OAMtB,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,IAGH,8BACG,eAED,cAAC,EAAD,CAAUF,KAAMA,UAIpB,mBAAGR,UAAU,iBAAb,SACGD,IAGFI,EAASQ,OAAS,EACjB,cAAC,EAAD,CAAaR,SAAUA,IAEvB,qCACE,uBACA,mBAAG,UAAQ,oBAAX,oCC9BKS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMT,KAAI,SAAAU,GAAI,OACb,cAAC,EAAD,CACEJ,MAAOI,EAAKJ,MACZX,KAAMe,EAAKf,KACXS,KAAMM,EAAKN,KACXL,SAAUW,EAAKX,UACVW,EAAKR,UCHZO,EAAQE,EAAgBX,KAAI,SAAAU,GAAI,kCACjCA,GADiC,IAEpCN,MAImBQ,EAJDF,EAAKE,OAKhBC,EAAgBC,MACrB,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,MACjB,MANLb,UAS2BgB,EATGL,EAAKR,GAU5Bc,EAAmBC,QACxB,SAAAhB,GAAO,OAAIA,EAAQc,SAAWA,QAFlC,IAA6BA,EANRH,KAYd,IAAMM,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUa,MAAOA,QCzBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5d4a1061.chunk.js","sourcesContent":["export const CommentInfo = ({ name, email, body }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">\n        {name}\n      </strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${email}`}\n      >\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {body}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo\n        name={comment.name}\n        email={comment.email}\n        body={comment.body}\n        key={comment.id}\n      />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({\n  title,\n  body,\n  user,\n  comments,\n}) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {body}\n    </p>\n\n    {comments.length > 0 ? (\n      <CommentList comments={comments} />\n    ) : (\n      <>\n        <hr />\n        <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      </>\n    )}\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo\n        title={post.title}\n        body={post.body}\n        user={post.user}\n        comments={post.comments}\n        key={post.id}\n      />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserbyId(post.userId),\n  comments: getCommentsbyPostId(post.id),\n}));\n\nfunction getUserbyId(userId) {\n  return usersFromServer.find(\n    user => user.id === userId,\n  ) || null;\n}\n\nfunction getCommentsbyPostId(postId) {\n  return commentsFromServer.filter(\n    comment => comment.postId === postId,\n  );\n}\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}